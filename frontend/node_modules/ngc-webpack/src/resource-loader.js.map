{"version":3,"file":"resource-loader.js","sourceRoot":"","sources":["../../src/resource-loader.ts"],"names":[],"mappings":";;AAOA,IAAI,CAAC;IACH,cAAc,EAAE,CAAC;IACjB,EAAE,CAAC,CAAC,CAAC,6BAAqB,CAAC,CAAC,CAAC;QAC3B,QAAQ,EAAE,CAAC;IACb,CAAC;AACH,CAAC;AAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,QAAQ,EAAE,CAAC;AACb,CAAC;AAED;IACE,IAAM,cAAc,GAAG,OAAO,CAAC,sCAAsC,CAAC,CAAC;IACvE,6BAAqB,GAAG,cAAc,CAAC,qBAAqB,CAAC;AAC/D,CAAC;AAED;IACE,IAAM,cAAc,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;IACrD,6BAAqB,GAAG,cAAc,CAAC,qBAAqB,CAAC;AAC/D,CAAC","sourcesContent":["export let WebpackResourceLoader: { new (): any; get(filename: string): Promise<string>; };\nexport type WebpackResourceLoader = {\n  new (): any; get(filename: string): Promise<string>;\n  update(parentCompilation: any): void;\n  getResourceDependencies(filePath: string): string[];\n};\n\ntry {\n  setFromNgTools();\n  if (!WebpackResourceLoader) {\n    setLocal();\n  }\n} catch (e) {\n  setLocal();\n}\n\nfunction setFromNgTools() {\n  const resourceLoader = require('@ngtools/webpack/src/resource_loader');\n  WebpackResourceLoader = resourceLoader.WebpackResourceLoader;\n}\n\nfunction setLocal() {\n  const resourceLoader = require('./_resource-loader');\n  WebpackResourceLoader = resourceLoader.WebpackResourceLoader;\n}"]}