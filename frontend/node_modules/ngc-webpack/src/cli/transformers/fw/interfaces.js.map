{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../../../src/cli/transformers/fw/interfaces.ts"],"names":[],"mappings":";;;;;;;;;;;;AAEA,IAAY,cAIX;AAJD,WAAY,cAAc;IACxB,uDAAM,CAAA;IACN,iDAAG,CAAA;IACH,yDAAO,CAAA;AACT,CAAC,EAJW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAIzB;AAMD;IACE,4BACS,IAAoB,EACpB,UAAyB,EACzB,MAAe;QAFf,SAAI,GAAJ,IAAI,CAAgB;QACpB,eAAU,GAAV,UAAU,CAAe;QACzB,WAAM,GAAN,MAAM,CAAS;IACpB,CAAC;IACP,yBAAC;AAAD,CAAC,AAND,IAMC;AANqB,gDAAkB;AAQxC;IAAyC,uCAAkB;IACzD,6BAAY,UAAyB,EAAE,MAAe;eACpD,kBAAM,cAAc,CAAC,MAAM,EAAE,UAAU,EAAE,MAAM,CAAC;IAClD,CAAC;IACH,0BAAC;AAAD,CAAC,AAJD,CAAyC,kBAAkB,GAI1D;AAJY,kDAAmB;AAMhC;IAAsC,oCAAkB;IACtD,0BAAY,UAAyB,EAAE,MAAe,EAC7C,MAAgB,EAAS,KAAe;QADjD,YAEE,kBAAM,cAAc,CAAC,GAAG,EAAE,UAAU,EAAE,MAAM,CAAC,SAC9C;QAFQ,YAAM,GAAN,MAAM,CAAU;QAAS,WAAK,GAAL,KAAK,CAAU;;IAEjD,CAAC;IACH,uBAAC;AAAD,CAAC,AALD,CAAsC,kBAAkB,GAKvD;AALY,4CAAgB;AAO7B;IAA0C,wCAAkB;IAE1D,8BAAY,UAAyB,EAAE,MAAe,EAAS,WAAoB;QAAnF,YACE,kBAAM,cAAc,CAAC,OAAO,EAAE,UAAU,EAAE,MAAM,CAAC,SAClD;QAF8D,iBAAW,GAAX,WAAW,CAAS;;IAEnF,CAAC;IACH,2BAAC;AAAD,CAAC,AALD,CAA0C,kBAAkB,GAK3D;AALY,oDAAoB","sourcesContent":["import * as ts from 'typescript';\n\nexport enum OPERATION_KIND {\n  Remove,\n  Add,\n  Replace\n}\n\nexport interface StandardTransform {\n  (sourceFile: ts.SourceFile): TransformOperation[];\n}\n\nexport abstract class TransformOperation {\n  constructor(\n    public kind: OPERATION_KIND,\n    public sourceFile: ts.SourceFile,\n    public target: ts.Node\n  ) { }\n}\n\nexport class RemoveNodeOperation extends TransformOperation {\n  constructor(sourceFile: ts.SourceFile, target: ts.Node) {\n    super(OPERATION_KIND.Remove, sourceFile, target);\n  }\n}\n\nexport class AddNodeOperation extends TransformOperation {\n  constructor(sourceFile: ts.SourceFile, target: ts.Node,\n    public before?: ts.Node, public after?: ts.Node) {\n    super(OPERATION_KIND.Add, sourceFile, target);\n  }\n}\n\nexport class ReplaceNodeOperation extends TransformOperation {\n  kind: OPERATION_KIND.Replace;\n  constructor(sourceFile: ts.SourceFile, target: ts.Node, public replacement: ts.Node) {\n    super(OPERATION_KIND.Replace, sourceFile, target);\n  }\n}\n"]}