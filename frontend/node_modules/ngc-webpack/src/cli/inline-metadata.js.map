{"version":3,"file":"inline-metadata.js","sourceRoot":"","sources":["../../../src/cli/inline-metadata.ts"],"names":[],"mappings":";;AAAA,2BAA6B;AAG7B,sDAM+B;AAG/B,sBAAsB,GAAQ;IAC5B,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;AAC9E,CAAC;AAED,wCAAwC,UAAiB;IACvD,MAAM,CAAC,UAAU;SACd,IAAI,CAAE,UAAA,KAAK;QACV,EAAE,CAAC,CAAC,+CAAgC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAM,GAAG,GAAG,KAAK,CAAC,UAAU,CAAC;YAC7B,EAAE,CAAC,CAAC,0DAA2C,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,KAAK,eAAe,IAAI,GAAG,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC;gBACnH,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;QACH,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC,CAAC,CAAA;AACN,CAAC;AAED,8BAAqC,UAAkB,EAClB,cAA8B,EAC9B,WAAyD;IACpF,IAAA,kCAAQ,EAAE,gCAAO,CAAoB;IAE7C,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAE,UAAA,GAAG;QAChC,IAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC5B,EAAE,CAAC,CAAC,8BAAe,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;YAC/C,IAAM,GAAG,GAAG,8BAA8B,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAC7D,IAAM,iBAAiB,GAAG,GAAG,IAAI,GAAG,CAAC,SAAS,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAEnE,EAAE,CAAC,CAAC,iBAAiB,IAAI,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;gBACzD,wFAAwF;gBACxF,IAAM,QAAM,GAAG,OAAO;sBAClB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;sBACpD,UAAU,CACb;gBAED,EAAE,CAAC,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,CAAC;oBAClC,IAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,QAAM,EAAE,iBAAiB,CAAC,WAAW,CAAC,CAAC,CAAC;oBAClF,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACb,OAAO,iBAAiB,CAAC,WAAW,CAAC;wBACrC,iBAAiB,CAAC,QAAQ,GAAG,QAAQ,CAAC;oBACxC,CAAC;gBACH,CAAC;gBAED,EAAE,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC;oBAChC,iBAAiB,CAAC,MAAM,GAAG,iBAAiB,CAAC,SAAS;yBACnD,GAAG,CAAE,UAAA,SAAS,IAAI,OAAA,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,QAAM,EAAE,SAAS,CAAC,CAAC,EAA5C,CAA4C,CAAE,CAAC;oBACpE,OAAO,iBAAiB,CAAC,SAAS,CAAC;gBACrC,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAlCD,oDAkCC","sourcesContent":["import * as Path from 'path';\n\nimport { Component } from '@angular/core';\nimport {\n  ModuleMetadata,\n  MetadataSymbolicCallExpression,\n  isClassMetadata,\n  isMetadataSymbolicCallExpression,\n  isMetadataImportedSymbolReferenceExpression\n} from '@angular/compiler-cli';\n\n\nfunction hasResources(obj: any): obj is Component {\n  return obj.hasOwnProperty('templateUrl') || obj.hasOwnProperty('styleUrls');\n}\n\nfunction findComponentDecoratorMetadata(decorators: any[]): MetadataSymbolicCallExpression {\n  return decorators\n    .find( entry => {\n      if (isMetadataSymbolicCallExpression(entry)) {\n        const exp = entry.expression;\n        if (isMetadataImportedSymbolReferenceExpression(exp) && exp.module === '@angular/core' && exp.name === 'Component') {\n          return true;\n        }\n      }\n      return false;\n    })\n}\n\nexport function inlineMetadataBundle(relativeTo: string,\n                                     metadataBundle: ModuleMetadata,\n                                     getResource: (resourcePath: string) => string | undefined): void {\n  const { metadata, origins } = metadataBundle;\n\n  Object.keys(metadata).forEach( key => {\n    const entry = metadata[key];\n    if (isClassMetadata(entry) && entry.decorators) {\n      const exp = findComponentDecoratorMetadata(entry.decorators);\n      const componentMetadata = exp && exp.arguments && exp.arguments[0];\n\n      if (componentMetadata && hasResources(componentMetadata)) {\n        // when no \"origins\" it is metadata json for specific module, if origins it's flat mode.\n        const origin = origins\n          ? Path.dirname(Path.resolve(relativeTo, origins[key]))\n          : relativeTo\n        ;\n\n        if (componentMetadata.templateUrl) {\n          const template = getResource(Path.resolve(origin, componentMetadata.templateUrl));\n          if (template) {\n            delete componentMetadata.templateUrl;\n            componentMetadata.template = template;\n          }\n        }\n\n        if (componentMetadata.styleUrls) {\n          componentMetadata.styles = componentMetadata.styleUrls\n            .map( stylePath => getResource(Path.resolve(origin, stylePath)) );\n          delete componentMetadata.styleUrls;\n        }\n      }\n    }\n  });\n}"]}