{"version":3,"file":"plugin.js","sourceRoot":"","sources":["../../src/plugin.ts"],"names":[],"mappings":"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","sourcesContent":["import * as ts from 'typescript';\nimport { AngularCompilerPlugin } from '@ngtools/webpack';\n\nimport { NgcWebpackPluginOptions } from './plugin-options'\nimport { hasHook, isValidAngularCompilerPlugin } from './utils';\nimport { WebpackResourceLoader } from './resource-loader';\nimport { MonkeyAngularCompilerPlugin, MonkeyWebpackCompilerHost } from './monkies';\n\nexport interface NgcCompilerHost extends ts.CompilerHost {\n  resourceLoader?: { get(filePath: string): Promise<string> };\n  readResource?(fileName: string): Promise<string> | string;\n}\n\nexport interface NgcCompilerExecutionHost {\n  execute(compiler: any): void;\n  compilerHost: NgcCompilerHost;\n  transformers: ts.TransformerFactory<ts.SourceFile>[];\n  hookOverride?: {\n    [K in keyof NgcWebpackPluginOptions]?: (opt: NgcWebpackPluginOptions[K]) => void\n  }\n}\n\nexport function createAngularCompilerPluginExecutionHost(options: NgcWebpackPluginOptions): NgcCompilerExecutionHost {\n  const ngPlugin: MonkeyAngularCompilerPlugin = <any> new AngularCompilerPlugin(options);\n\n  if (!isValidAngularCompilerPlugin(ngPlugin)) {\n    throw new Error('The \"@ngtools/webpack\" package installed is not compatible with this ' +\n      'version of \"ngc-webpack\"');\n  }\n\n  // we must use the base instance because AngularCompilerPlugin use it.\n  const compilerHost = ngPlugin._compilerHost;\n\n  Object.defineProperty(compilerHost, 'resourceLoader', {\n    get: function(this: MonkeyWebpackCompilerHost) {\n      return this._resourceLoader;\n    }\n  });\n\n  return {\n    execute(compiler: any): void {\n      ngPlugin.apply(compiler);\n    },\n    compilerHost,\n    transformers: ngPlugin._transformers,\n    hookOverride: {\n      readFileTransformer: readFileTransformer => {\n        const orgReadFile = compilerHost.readFile;\n        const { predicate, transform } = readFileTransformer;\n        const predicateFn = typeof predicate === 'function'\n          ? predicate\n          : (fileName: string) => predicate.test(fileName)\n        ;\n\n        Object.defineProperty(compilerHost, 'readFile', {\n          value: function(this: MonkeyWebpackCompilerHost, fileName: string): string {\n            if (predicateFn(fileName)) {\n              let stats = compilerHost._files[fileName];\n              if (!stats) {\n                const content = transform(fileName, orgReadFile.call(compilerHost, fileName));\n                stats = compilerHost._files[fileName];\n                if (stats) {\n                  stats.content = content;\n                }\n                return content;\n              }\n            }\n            return orgReadFile.call(compilerHost, fileName);\n          }\n        });\n      }\n    }\n  }\n}\n\nexport class NgcWebpackPlugin {\n  readonly ngcWebpackPluginOptions: NgcWebpackPluginOptions;\n  private executionHostFactory: (options: NgcWebpackPluginOptions) => NgcCompilerExecutionHost;\n\n  constructor(options: NgcWebpackPluginOptions,\n              executionHostFactory: (options: NgcWebpackPluginOptions) => NgcCompilerExecutionHost = createAngularCompilerPluginExecutionHost) {\n    if (options.hasOwnProperty('AOT')) {\n      if (!options.hasOwnProperty('skipCodeGeneration')) {\n        options.skipCodeGeneration = !options.AOT;\n      }\n      delete options.AOT;\n    }\n\n    this.ngcWebpackPluginOptions = options;\n    this.executionHostFactory = executionHostFactory;\n  }\n\n  apply(compiler: any) {\n    const ngcOptions = this.ngcWebpackPluginOptions;\n    const executionHost = this.executionHostFactory(this.ngcWebpackPluginOptions);\n    const compilerHost = executionHost.compilerHost;\n\n    const executeHook = <K extends keyof NgcWebpackPluginOptions>(key: K, defaultHook: (opt: NgcWebpackPluginOptions[K]) => void) => {\n      if (ngcOptions[key]) {\n        if (executionHost.hookOverride && executionHost.hookOverride[key]) {\n          executionHost.hookOverride[key](ngcOptions[key]);\n        } else {\n          defaultHook(ngcOptions[key]);\n        }\n      }\n    };\n\n    executeHook('beforeRun', beforeRun => {\n      let ran = false;\n      const run = (cmp, next) => {\n        if (ran) {\n          next();\n          return;\n        }\n        // for now, run once\n        // TODO: add hook for watch mode to notify on watch-run\n        ran = true;\n        const webpackResourceLoader = new WebpackResourceLoader();\n        webpackResourceLoader.update(compiler.createCompilation());\n        Promise.resolve(beforeRun(webpackResourceLoader)).then(next).catch(next);\n      };\n      compiler.plugin('run', run);\n      compiler.plugin('watch-run', run);\n    });\n\n    executeHook('readFileTransformer', opt => {\n      const orgReadFile = compilerHost.readFile;\n      const { predicate, transform } = ngcOptions.readFileTransformer;\n      const predicateFn = typeof predicate === 'function'\n        ? predicate\n        : (fileName: string) => predicate.test(fileName)\n      ;\n\n      Object.defineProperty(compilerHost, 'readFile', {\n        value: function(this: MonkeyWebpackCompilerHost, fileName: string): string {\n          const readFileResponse = orgReadFile.call(compilerHost, fileName);\n          return predicateFn(fileName) ? transform(fileName, readFileResponse) : readFileResponse;\n        }\n      });\n    });\n\n    if (ngcOptions.tsTransformers) {\n      if (ngcOptions.tsTransformers.before) {\n        executionHost.transformers.push(...ngcOptions.tsTransformers.before);\n      }\n      if (ngcOptions.tsTransformers.after) {\n\n      }\n    }\n\n    if (hasHook(ngcOptions, ['resourcePathTransformer', 'resourceTransformer']).some( v => v) ) {\n      const resourceGet = compilerHost.resourceLoader.get;\n      compilerHost.resourceLoader.get = (filePath: string): Promise<string> => {\n        executeHook('resourcePathTransformer', pathTransformer => filePath = pathTransformer(filePath));\n\n        let p = resourceGet.call(compilerHost.resourceLoader, filePath);\n\n        executeHook(\n          'resourceTransformer',\n          resourceTransformer => p = p.then( content => Promise.resolve(resourceTransformer(filePath, content)) )\n        );\n\n        return p;\n      }\n    }\n\n    executionHost.execute(compiler);\n  }\n\n  static clone(plugin: NgcWebpackPlugin,\n               overwrite: {\n                 options?: Partial<NgcWebpackPluginOptions>,\n                 executionHostFactory?: (options: NgcWebpackPluginOptions) => NgcCompilerExecutionHost\n               }): NgcWebpackPlugin {\n    const options = Object.assign({}, plugin.ngcWebpackPluginOptions, overwrite.options || {});\n    const executionHostFactory = overwrite.executionHostFactory || plugin.executionHostFactory;\n    return new NgcWebpackPlugin(options, executionHostFactory);\n  }\n}"]}